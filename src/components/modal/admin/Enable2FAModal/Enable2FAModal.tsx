"use client";

import { useToast } from "@/contexts/ToastContext";
import styles from "./Enable2FAModal.module.css";

export default function Enable2FAModal({ onClose }: { onClose: () => void }) {
  const { addToast } = useToast();
  const secretKey = "YOUR_SECRET_KEY_HERE"; // This should be generated by the backend

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // Mock API call to verify and enable 2FA
    addToast("2FA enabled successfully!", "success");
    onClose();
  };

  return (
    <div className={styles.modalBackdrop} onClick={onClose}>
      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>
        <div className={styles.modalHeader}>
          <h3>Enable 2FA Authentication</h3>
          <button onClick={onClose}>&times;</button>
        </div>
        <div className={styles.content}>
          <p>Scan the QR code with your authenticator app (e.g., Google Authenticator).</p>
          <div className={styles.qrCode}>
            {/* In a real app, you'd use a library like 'qrcode.react' to generate this */}
            <p>[QR Code Placeholder]</p>
          </div>
          <p>Or enter this secret key manually:</p>
          <div className={styles.secretKey}>{secretKey}</div>
          <form onSubmit={handleSubmit} className={styles.form}>
            <div className={styles.field}>
              <label>Verification Code</label>
              <input type="text" placeholder="Enter 6-digit code" required maxLength={6} />
            </div>
            <div className={styles.actions}>
              <button type="button" onClick={onClose} className={styles.cancelButton}>Cancel</button>
              <button type="submit" className={styles.enableButton}>Enable</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}